# Docker Compose version 3.8

services:
  # SIP Proxy Application
  sip-proxy-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: sip-proxy-production
    restart: unless-stopped
    ports:
      - "3000:3000" # HTTP API
      - "5060:5060" # SIP Signaling
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - DRACHTIO_HOST=drachtio-server
      - DRACHTIO_PORT=9022
      - DRACHTIO_SECRET=${DRACHTIO_SECRET:-cymru}
      - RTPENGINE_HOST=rtpengine-lb
      - RTPENGINE_PORT=22222
      - TARGET_SIP_SERVER=${TARGET_SIP_SERVER:-asterisk-service.ada-asia.my:5060}
      - CORS_ORIGIN=${CORS_ORIGIN:-https://yourdomain.com}
    depends_on:
      - drachtio-server
      - rtpengine-lb
    networks:
      - sip-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Drachtio SIP Server
  drachtio-server:
    image: drachtio/drachtio-server:latest
    container_name: drachtio-production
    restart: unless-stopped
    ports:
      - "9022:9022" # Admin port
      - "5060:5060" # SIP port
      - "5061:5061" # SIP TLS port
    environment:
      - DRACHTIO_ADMIN_PORT=9022
      - DRACHTIO_ADMIN_SECRET=${DRACHTIO_SECRET:-cymru}
      - DRACHTIO_SIP_PORT=5060
      - DRACHTIO_SIP_TLS_PORT=5061
      - DRACHTIO_LOG_LEVEL=info
    volumes:
      - ./drachtio/drachtio.conf.xml:/etc/drachtio.conf.xml:ro
    networks:
      - sip-network
    healthcheck:
      test: ["CMD", "netstat", "-tulpn", "|", "grep", ":5060"]
      interval: 30s
      timeout: 10s
      retries: 3

  # RTPEngine Load Balancer
  rtpengine-lb:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: rtpengine-lb
    restart: unless-stopped
    ports:
      - "22222:22222" # RTPEngine load balancer
    depends_on:
      - rtpengine-worker-1
      - rtpengine-worker-2
    networks:
      - sip-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:22222/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # RTPEngine Worker 1
  rtpengine-worker-1:
    build:
      context: ./rtpengine
      dockerfile: Dockerfile
    container_name: rtpengine-worker-1
    restart: unless-stopped
    ports:
      - "22225:22222" # RTPEngine HTTP API
      - "10000-20000:10000-20000/udp" # RTP ports
    environment:
      - RTPENGINE_OPTS="--interface=eth0 --http-port=22222 --listen-ng=0.0.0.0:22222 --log-level=info"
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    networks:
      - sip-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:22222/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # RTPEngine Worker 2
  rtpengine-worker-2:
    build:
      context: ./rtpengine
      dockerfile: Dockerfile
    container_name: rtpengine-worker-2
    restart: unless-stopped
    ports:
      - "22227:22222" # RTPEngine HTTP API
      - "20001-30000:20001-30000/udp" # RTP ports
    environment:
      - RTPENGINE_OPTS="--interface=eth0 --http-port=22222 --listen-ng=0.0.0.0:22222 --log-level=info"
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    networks:
      - sip-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:22222/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebRTC Bridge
  webrtc-bridge:
    build:
      context: ./app
      dockerfile: Dockerfile.webrtc
    container_name: webrtc-bridge-production
    restart: unless-stopped
    ports:
      - "8080:8080" # WebSocket port
    environment:
      - NODE_ENV=production
      - SIP_PROXY_URL=http://sip-proxy-app:3000
      - WS_PORT=8080
    depends_on:
      - sip-proxy-app
    networks:
      - sip-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring & Logging
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - sip-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - sip-network

networks:
  sip-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
  grafana_data:
